package nodemanager

import (
	"fmt"
	"github.com/stretchr/testify/assert"
	"math/rand"
	"testing"
	"time"

	"github.com/skycoin/skycoin/src/cipher"
	"github.com/skycoin/skycoin/src/mesh/messages"
)

func TestSendThroughRandomNetworks(t *testing.T) {
	fmt.Println("TestSendThroughRandomNetworks")
	messages.SetDebugLogLevel()

	nm := newNodeManager()
	defer nm.Shutdown()

	lens := []int{2, 5, 10} // sizes of different networks which will be tested

	for _, n := range lens {
		nodes := nm.CreateRandomNetwork(n)

		node0 := nodes[0]
		node1 := nodes[len(nodes)-1]
		conn0, err := nm.NewConnection(node0)
		assert.Nil(t, err)
		conn1, err := nm.NewConnection(node1)
		assert.Nil(t, err)
		nm.Connect(node0, node1)
		msg := []byte{'t', 'e', 's', 't'}
		conn0.Send(msg)
		time.Sleep(time.Duration(n) * time.Second)
		assert.Equal(t, conn0.GetStatus(), CONNECTED)
		assert.Equal(t, conn1.GetStatus(), CONNECTED)
	}
	fmt.Println("TestSendThroughRandomNetworks end")
}
